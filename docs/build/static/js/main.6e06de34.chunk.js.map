{"version":3,"sources":["graphql/Queries.js","Pages/videos/video-2.mp4","Pages/Home.js","App.js","index.js"],"names":["GET_WEATHER_QUERY","gql","Home","useState","citySearched","setCitySearched","useLazyQuery","variables","name","getWeather","data","error","console","log","className","autoPlay","loop","muted","src","globe","type","placeholder","onChange","event","target","value","onClick","getCityByName","weather","temperature","actual","toFixed","summary","description","App","client","ApolloClient","cache","InMemoryCache","uri","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAGaA,EAAoBC,YAAH,ugBCHf,MAA0B,oC,OCqD1BC,MA/Cf,WACE,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCC,YAAaN,EAAmB,CACpEO,UAAW,CAAEC,KAAMJ,KADrB,mBAAOK,EAAP,YAAqBC,EAArB,EAAqBA,KAMrB,OANA,EAA2BC,MAMT,+CAEdD,GACFE,QAAQC,IAAIH,GAIZ,sBAAKI,UAAU,iBAAf,UACA,uBAAOC,UAAQ,EAACC,MAAI,EAACC,OAAK,EAA1B,SACI,wBAAQC,IAAKC,EAAOC,KAAK,gBAG3B,uBACEN,UAAU,QACVM,KAAK,OACLC,YAAY,eACZC,SAAU,SAACC,GACTlB,EAAgBkB,EAAMC,OAAOC,UAGjC,wBAAQX,UAAU,QAAQY,QAAS,kBAAMjB,KAAzC,qBACA,qBAAKK,UAAU,OAAf,SACGJ,GACC,qCACE,mCAAMA,EAAKiB,cAAcnB,KAAzB,OACA,+BACG,IADH,iBAEiBE,EAAKiB,cAAcC,QAAQC,YAAYC,OAAS,QAAQC,QAAQ,MAEjF,8CACerB,EAAKiB,cAAcC,QAAQI,QAAQC,yB,wBC3B/CC,MAbf,WACE,IAAMC,EAAS,IAAIC,IAAa,CAC9BC,MAAO,IAAIC,IACXC,IAAK,+CAGP,OACE,cAACC,EAAA,EAAD,CAAgBL,OAAQA,EAAxB,SACE,cAAC,EAAD,OCNNM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6e06de34.chunk.js","sourcesContent":["import { fromPromise } from \"@apollo/client\";\r\nimport {gql} from \"@apollo/client\";\r\n\r\nexport const GET_WEATHER_QUERY = gql`\r\nquery getCityByName($name: String!) {\r\n    getCityByName(name: $name) {\r\n      name\r\n      country\r\n      weather {\r\n        summary {\r\n          title\r\n          description\r\n          icon\r\n        }\r\n        temperature {\r\n          actual\r\n          feelsLike\r\n          min\r\n          max\r\n        }\r\n        wind {\r\n          speed\r\n          deg\r\n        }\r\n        clouds {\r\n          all\r\n          visibility\r\n          humidity\r\n        }\r\n        timestamp\r\n      }\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/video-2.39e6c79b.mp4\";","import React, { useState } from \"react\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport { GET_WEATHER_QUERY } from \"../graphql/Queries\";\r\nimport \"../App.css\";\r\nimport globe from './videos/video-2.mp4';\r\n\r\nfunction Home() {\r\n  const [citySearched, setCitySearched] = useState(\"\");\r\n  const [getWeather, { data, error }] = useLazyQuery(GET_WEATHER_QUERY, {\r\n    variables: { name: citySearched },\r\n  });\r\n\r\n\r\n\r\n  if (error) return <h1> Error found</h1>;\r\n\r\n  if (data) {\r\n    console.log(data);\r\n  }\r\n\r\n  return (\r\n    <div className=\"hero-container\">\r\n    <video autoPlay loop muted>\r\n        <source src={globe} type=\"video/mp4\"/>\r\n    </video>\r\n      {/* <h1 className=\"header\">Search For Weather</h1> */}\r\n      <input\r\n        className=\"field\"\r\n        type=\"text\"\r\n        placeholder=\"City name...\"\r\n        onChange={(event) => {\r\n          setCitySearched(event.target.value);\r\n        }}\r\n      />\r\n      <button className=\"label\" onClick={() => getWeather()}> Search</button>\r\n      <div className=\"text\">\r\n        {data && (\r\n          <>\r\n            <h1> {data.getCityByName.name} </h1>\r\n            <h1>\r\n              {\" \"}\r\n              Temperature: {(data.getCityByName.weather.temperature.actual - 273.15).toFixed(2)}\r\n            </h1>\r\n            <h1>\r\n              Conditions: {data.getCityByName.weather.summary.description}\r\n            </h1>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import \"./App.css\";\nimport Home from \"./Pages/Home\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nfunction App() {\n  const client = new ApolloClient({\n    cache: new InMemoryCache(),\n    uri: \"https://graphql-weather-api.herokuapp.com/\",\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <Home />\n    </ApolloProvider>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./App.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}